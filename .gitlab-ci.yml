image: golang:latest

services:
  - postgres:13-alpine

variables:
  REPO_NAME: gitlab.com/ranfdev/discepto
  POSTGRES_DB: discepto
  POSTGRES_PASSWORD: discepto
  POSTGRES_USER: discepto
  POSTGRES_HOST_AUTH_METHOD: trust

include:
  template: Jobs/Code-Quality.gitlab-ci.yml

.go-cache:
  variables:
    GOPATH: $CI_PROJECT_DIR/.go
  before_script:
    - mkdir -p .go
  cache:
    paths:
      - .go/pkg/mod/

stages:
  - test
  - build
  - staging

format:
  stage: test
  extends: .go-cache
  script:
    - go fmt $(go list ./... | grep -v /vendor/)
    - go vet $(go list ./... | grep -v /vendor/)
    - go test -race $(go list ./... | grep -v /vendor/)

compile:
  stage: build
  extends: .go-cache
  script:
    - make pack
  artifacts:
    paths:
      - ./build/discepto.tar.gz

deploy-to-staging:
  image: alpine
  stage: staging
  script:
  ##
  ## Install ssh-agent if not already installed, it is required by Docker.
  ## (change apt-get to yum if you use an RPM-based image)
  ##
  - 'which ssh-agent || ( apk add openssh-client rsync )'

  ##
  ## Run ssh-agent (inside the build environment)
  ##
  - eval $(ssh-agent -s)

  ##
  ## Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store
  ## We're using tr to fix line endings which makes ed25519 keys work
  ## without extra base64 encoding.
  ## https://gitlab.com/gitlab-examples/ssh-private-key/issues/1#note_48526556
  ##
  - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -

  ##
  ## Create the SSH directory and give it the right permissions
  ##
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh

  - ssh-keyscan "$STAGING_SERVER_DOMAIN" >> ~/.ssh/known_hosts
  - chmod 644 ~/.ssh/known_hosts
  - < ./build/discepto.tar.gz ssh "gitlab@$STAGING_SERVER_DOMAIN" "tar -xzf - && systemctl --user restart discepto.service"
